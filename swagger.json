{
    "openapi": "3.0.3",
    "info": {
      "version": "1.0.0",
      "title": "Pet-support-API",
      "description": "This is a sample Pet support Server based on the OpenAPI 3.0 specification."
    },

    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json"],
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    },
    "servers": [
      {
        "url": "https://pet-support-test2.onrender.com"
      },
      {
        "url": "http://localhost:4000"
      }
    ],

    "tags": [
        {
          "name": "user",
          "description": "Operations about user"
        },
      {
        "name": "pets",
        "description": "Everything about users pets"
      },
      {
        "name": "notices",
        "description": "Operations with notices"
      },
      {
        "name": "news",
        "description": "Operations with news"
      },
      {
        "name": "sponsors",
        "description": "Operations with sponsors"
      }
    ],
    "paths": {
      "/api/users/register": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Create user",
          "description": "",
          "operationId": "createUser",
          "requestBody": {
            "description": "Created user object",
            "required":true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
              },
              "409": {
                "description": "Email in use"
              }
            }
            
          }
      },
      "/api/users/login": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "login user",
          "description": "",
          "operationId": "loginUser",
          "requestBody": {
            "description": "",
            "required":true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthResponse"
                  }
                }
              }
            },
              "400": {
                "description": "Email or password is wrong"
              }
            }
            
          }
      },
      "/api/users/logout": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Logs out current logged in user",
          "description": "",
          "operationId": "logoutUser",
          "parameters": [],
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "401": {
              "description": "Unauthorized"
            }
          },
          "security":[{"Bearer": []}]
        }
      },
      "/api/users/restore": {
        "patch": {
          "tags": [
            "user"
          ],
          "summary": "Restore password",
          "description": "",
          "operationId": "restorePassword",
          "requestBody": {
            "description": "",
            "required":true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation"
            },
            "400": {
              "description": "Bad request"
              },
              "404": {
                "description": "Not found"
              }
            }
            
          }
      },
      "/api/users/user": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Information about current user",
          "description": "",
          "operationId": "getUser",
          "parameters": [],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/UserWithPets"
                    }
                    
                  }
                }
            },
            "401": {
              "description": "Unauthorized"
            }
          },
          "security":[{"Bearer": []}]
        },
        "put": {
          "tags": [
            "user"
          ],
          "summary": "Change information about current user",
          "description": "",
          "operationId": "updateUser",
          "parameters": [],
          "requestBody": {
            "description": "",
            "required":true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldToUpdate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/User"
                    }
                    
                  }
                }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Bad request"
            }
          },
          "security":[{"Bearer": []}]
        },
        "patch": {
          "tags": [
            "user"
          ],
          "summary": "Change password",
          "description": "",
          "operationId": "updatePassword",
          "parameters": [],
          "requestBody": {
            "description": "",
            "required":true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePassword"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password updated successfully"
            },
            "400": {
              "description": "Password is wrong"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Bad request"
            }
          },
          "security":[{"Bearer": []}]
        }
      },
      "/api/users/avatar": {
        "put": {
          "tags": [
            "user"
          ],
          "summary": "Update user`s avatar",
          "description": "",
          "operationId": "updateUsersAvatar",
          "parameters": [],
          "requestBody": {
            "description": "",
            "required":true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Avatar"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/UserAvatar"
                    }
                    
                  }
                }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad request"
            }
          },
          "security":[{"Bearer": []}]
        }
      },
      "/api/users/refresh": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "refresh access token",
          "description": "",
          "operationId": "refreshAccess",
          "requestBody": {
            "description": "",
            "required":true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RefreshResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
              },
              "403": {
                "description": "Invalid signature"
              }
            }
            
          }
      },
      "/api/pets": {
        "post": {
          "tags": [
            "pets"
          ],
          "summary": "Add new user`s pet",
          "description": "",
          "operationId": "addPet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "required":true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/NewPet"
                    }
                  }
                }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Avatar is required"
            }
          },
          "security":[{"Bearer": []}]
        }
      },
      "/api/pets/{petId}":{
        "delete": {
          "tags": [
            "pets"
          ],
          "summary": "Delete pet",
          "description": "",
          "operationId": "deletePet",
          "parameters": [{"name": "petId", "in": "path", "required": true}],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/NewPet"
                    }
                  }
                }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Invalid id"
            }
          },
          "security":[{"Bearer": []}]
        }

      },
      "/api/notices/notice/{noticeId}":{
        "get": {
          "tags": [
            "notices"
          ],
          "summary": "Get notice by id",
          "description": "",
          "operationId": "get Notice",
          "parameters": [{"name": "noticeId", "in": "path", "required": true}],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/Notice"
                    }
                  }
                }
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "Not found"
            },
            "500": {
              "description": "Invalid id"
            }
          }
        }
      },
      "/api/notices/notice": {
        "post": {
          "tags": [
            "notices"
          ],
          "summary": "Add new notice",
          "description": "",
          "operationId": "addPet",
          "parameters": [],
          "requestBody": {
            "description": "",
            "required":true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/NewNotice"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/Notice"
                    }
                  }
                }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad request"
            }
          },
          "security":[{"Bearer": []}]
        }

      },
      "/api/notices/search":{
        "get": {
          "tags": [
            "notices"
          ],
          "summary": "Get notices by keyword in title",
          "description": "",
          "operationId": "get Notice",
          "parameters": [{"name": "q", "in": "query", "required": true }],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/Notices"
                    }
                  }
                }
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "Not found"
            }
          }
        }

      },
      "/api/notices/own":{
        "get": {
          "tags": [
            "notices"
          ],
          "summary": "Get own notices",
          "description": " ",
          "operationId": "getOwnNotice",
          "parameters": [],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/Notices"
                    }
                  }
                }
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not found"
            }
          },
          "security":[{"Bearer": []}]
        }

      },
      "/api/notices/favorite":{
        "get": {
          "tags": [
            "notices"
          ],
          "summary": "Get favorite notices",
          "description": "",
          "operationId": "get Notice",
          "parameters": [],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/Notices"
                    }
                  }
                }
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not found"
            }
          },
          "security":[{"Bearer": []}]
        }
      },
      "/api/notices/{categoryName}":{
        "get": {
          "tags": [
            "notices"
          ],
          "summary": "Get notices by category",
          "description": "Categories names: sell, for-free, lost-found",
          "operationId": "get Notice",
          "parameters": [{"name": "categoryName", "in": "path", "required": true }, {"name": "page", "in": "query", "type": "integer"}, {"name": "limit", "in": "query", "type": "integer"}],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/Notices"
                    }
                  }
                }
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "Not found"
            }
          }
        }
      },
      "/api/notices/{noticeId}":{
        "patch": {
          "tags": [
            "notices"
          ],
          "summary": "Update favorite status",
          "description": "",
          "operationId": "updateFavoriteStatus",
          "parameters": [{"name": "noticeId", "in": "path", "required": true}],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/FavoriteNotices"
                    }
                  }
                }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad request"
            }
          },
          "security":[{"Bearer": []}]
        },
        "delete": {
          "tags": [
            "notices"
          ],
          "summary": "Delete notice",
          "description": "",
          "operationId": "deleteNotice",
          "parameters": [{"name": "noticeId", "in": "path", "required": true}],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {              
                  "application/json": {
                    "schema":{
                      "$ref": "#/components/schemas/Notice"
                    }
                  }
                }
            },
            "401": {
              "description": "Unauthorized"
            },
            "400": {
              "description": "Bad request"
            }
          },
          "security":[{"Bearer": []}]
        }
      },
      "/api/sponsors": {
        "get": {
          "tags": [
            "sponsors"
          ],
          "summary": "Get all sponsors",
          "description": "",
          "operationId": "getSponsors",
          "parameters": [],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SponsorsResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/api/news": {
        "get": {
          "tags": [
            "news"
          ],
          "summary": "Get all news",
          "description": "",
          "operationId": "getNews",
          "parameters": [],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NewsResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "RegistrationRequest": {
          "type": "object",
          "required": ["name", "email", "password", "phone", "city"],
          "properties": {
            "name": {
              "type": "string",
              "example": "theUser"
            },
            "email": {
              "type": "string",
              "example": "john@email.com"
            },
            "password": {
              "type": "string",
              "example": "1234567"
            },
            "phone": {
              "type": "string",
              "example": "12345"
            },
            "city": {
              "type": "string",
              "example": "Kyiv"
            }
          }
        },
        "LoginRequest": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "example": "john@email.com"
            },
            "password": {
              "type": "string",
              "example": "1234567"
            }
          }
        },
        "UpdatePassword":{
          "type": "object",
          "required": ["newPassword", "password"],
          "properties": {
            "newPassword": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "AuthResponse":{
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "$ref": "#/components/schemas/User"
            },
            "accessToken": {
              "type": "string"
            },
            "refreshToken": {
              "type": "string"
            }
          }
        },
        "UserWithPets":{
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "$ref": "#/components/schemas/User"
            },
            "pets": {
              "type": "array",
              "example": []
            }
          }
        },
        "User":{
          "type": "object",
          "properties": {
                "_id": {
                  "type": "string",
                  "example": "63c6f80fab4874e768f0dd83"
                },
                "name": {
                  "type": "string",
                  "example": "theUser"
                },
                "email":{
                  "type": "string",
                  "example": "john@email.com"
                },
                "avatarURL":{
                  "type": "string",
                  "example": "http://res.cloudinary.com/dvqddp5la/image/upload/v1673618335/w3t87ucpbxquzk24kmwx.jpg"
                },
                "phone":{
                  "type": "string",
                  "example": "12345"
                },
                "city":{
                  "type": "string",
                  "example": "Kyiv"
                },
                "birthday":{
                  "type": "string",
                  "example": "01.01.1900"
                },
                "favoriteNotices": {
                  "type": "array",
                  "example": []
                }
          }
        },
        "FieldToUpdate":{
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "theUser"
              
            },
            "email": {
              "type": "string",
              "example": "john@email.com"
            },
            "birthday": {
              "type": "string",
              "example": "12.09.2000"
            },
            "phone": {
              "type": "string",
              "example": "12345"
            },
            "city": {
              "type": "string",
              "example": "Kyiv"
            }
          }
        },
        "UserAvatar":{
          "type": "object",
          "properties": {
            "avatarURL": {
              "type": "string",
              "example": "http://res.cloudinary.com/dvqddp5la/image/upload/v1673618335/w3t87ucpbxquzk24kmwx.jpg"
            }
          }
        },
        "Avatar":{
          "type": "object",
          "properties": {
            "avatar": {
              "type": "string",
              "format": "binary"
            }
          }
        },
        "Pet":{
          "type": "object",
          "required": ["name", "petAvatar"],
          "properties": {
            "petAvatar": {
              "type": "string",
              "format": "binary"
            },
            "name": {
              "type": "string",
              "example": "Gav"
            },
            "birthday": {
              "type": "string",
              "example": "12.12.2019"
            },
            "breed": {
              "type": "string",
              "example": "outbreed"
            },
            "comments": {
              "type": "string",
              "example": "Cute boy"
            }
          }
        },
        "NewPet":{
          "type": "object",
          "properties": {
            "petAvatar": {
              "type": "string",
              "example": "http://res.cloudinary.com/dvqddp5la/image/upload/v1673696237/petly_dir…"
            },
            "name": {
              "type": "string",
              "example": "Gav"
            },
            "birthday": {
              "type": "string",
              "example": "12.12.2019"
            },
            "breed": {
              "type": "string",
              "example": "outbreed"
            },
            "comments": {
              "type": "string",
              "example": "Cute boy"
            },
            "owner":{
              "type": "string",
              "example": "63c28b67389c8028613aca52"
            },
            "_id":{
              "type": "string",
              "example": "63c293ef9c2c38b4a60b3d3b"
            }
          }

        },
        "Notice":{
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "example": "Cute dog looking for good hands"
            },
            "image": {
              "type": "string",
              "example": "http://res.cloudinary.com/dvqddp5la/image/upload/v1673696237/petly_dir…"
            },
            "petName": {
              "type": "string",
              "example": "Gav"
            },
            "dateOfBirth": {
              "type": "string",
              "example": "12.12.2019"
            },
            "category": {
              "type": "string",
              "example": "sell"
            },
            "location": {
              "type": "string",
              "example": "Kyiv"
            },
            "comments": {
              "type": "string",
              "example": "Cute boy"
            },
            "breed": {
              "type": "string",
              "example": "outbreed"
            },
            "sex": {
              "type": "string",
              "example": "male"
            },
            "price": {
              "type": "integer",
              "example": 0
            },
            "owner":{
              "type": "string",
              "example": "63c28b67389c8028613aca52"
            },
            "_id":{
              "type": "string",
              "example": "63c293ef9c2c38b4a60b3d3b"
            }
          }

        },
        "NewNotice":{
          "type": "object",
          "required":["title", "petName", "location", "dateOfBirth", "image", "category"],
          "properties": {
            "title": {
              "type": "string",
              "example": "Cute dog looking for good hands"
            },
            "image": {
              "type": "string",
              "format": "binary"
            },
            "petName": {
              "type": "string",
              "example": "Gav"
            },
            "dateOfBirth": {
              "type": "string",
              "example": "12.12.2019"
            },
            "category": {
              "type": "string",
              "enum": ["sell", "lost-found", "for-free"],
              "example": "sell"
            },
            "location": {
              "type": "string",
              "example": "Kyiv"
            },
            "comments": {
              "type": "string",
              "example": "Cute boy"
            },
            "breed": {
              "type": "string",
              "example": "outbreed"
            },
            "sex": {
              "type": "string",
              "example": "male"
            },
            "price": {
              "type": "integer",
              "example": 0
            }
          }

        },
        "Notices":{
          "type": "object",
          "properties":{
            "notices": {
              "type": "array",
              "items": {
                "type": "object",
                  "$ref": "#/components/schemas/Notice"
                
              }
            }
          }

        },
        "FavoriteNotices":{
          "type": "object",
          "properties":{
            "user": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "favoriteNotices": {
                  "type": "array",
                  "items": {
                    "type": "string"
                    
                  }
                }
              }
            }

          }

        },
        "RefreshRequest": {
          "type": "object",
          "required": ["refreshToken"],
          "properties": {
            "refreshToken": {
              "type": "string"
            }
          }
        },
        "RestoreRequest": {
          "type": "object",
          "required": ["email"],
          "properties": {
            "email": {
              "type": "string",
              "format":"email"
            }
          }
        },
        "RefreshResponse":{
          "type": "object",
          "properties": {
            "accessToken": {
              "type": "string"
            },
            "refreshToken": {
              "type": "string"
            }
          }
        },
        "SponsorsResponse":{
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "63bf12ea67b57c04689197de"
              },
              "title": {
                "type": "string",
                "example": "Purina"
              },
              "url":{
                "type": "string",
                "example": "https://www.purina.ua/"
              },
              "imageUrl": {
                "type": "string",
                "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_290.png"
              },
              "workDays": {
                "type": "array"
              },
              "phone":{
                "type": "string",
                "example": "380800500950"
              },
              "email": {
                "type": "string",
                "example": "info@ua.nestle.com"
              }
          }
          }
        },
        "NewsResponse":{
          "type": "object",
          "properties":{
            "news": {
            "type": "array",
            "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "63bf123567b57c04689197d2"
              },
              "title": {
                "type": "string",
                "example": "Умови змінились: як з України вивести тварину за кордон"
              },
              "url":{
                "type": "string",
                "example": "https://tsn.ua/exclusive/umovi-zminilis-yak-z-ukrayini-vivesti-tvarinu-za-kordon-2118079.html"
              },
              "description": {
                "type": "string",
                "example": "Вимоги до виїзду тварин після початку повномасштабного вторгнення в багатьох країнах були спрощені. Чотирилапих випускали без жодного документа. А вакцинувати та чипувати могли просто на кордоні. Але тепер спрощений..."
              },
              "date":{
                "type": "string",
                "example": "2022-07-24"
              }
            }
          }
          }
          }
        }

      },
      "securitySchemes": {
        "Bearer":{
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }